// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  address       String?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  accounts      Account[]
  sessions      Session[]
  apps          App[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model App {
  id             String      @id @default(cuid())
  name           String
  chainId        BigInt      @map("chain_id")
  authMethod     String?     @map("auth_method")
  paymaster      String?
  bundler        String?
  textColor      String?     @map("text_color")
  bgColor        String?     @map("bg_color")
  primaryColor   String?     @map("primary_color")
  secondaryColor String?     @map("secondary_color")
  userId         String      @map("user_id")
  createdAt      DateTime    @default(now()) @map("created_at")
  updatedAt      DateTime    @updatedAt @map("updated_at")
  recipes        AppRecipe[]
  users          AppUser[]
  owner          User        @relation(references: [id], fields: [userId])

  @@index([userId])
  @@map("apps")
}

model Recipe {
  id         String      @id @default(cuid())
  name       String
  configs    Json?
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")
  appRecipes AppRecipe[]

  @@map("recipes")
}

model AppRecipe {
  id        String    @id @default(cuid())
  name      String
  configs   Json?
  appId     String    @map("app_id")
  recipeId  String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  app       App       @relation(references: [id], fields: [appId])
  recipe    Recipe    @relation(references: [id], fields: [recipeId])
  users     AppUser[]

  @@index([appId])
  @@index([recipeId])
  @@map("app_recipes")
}

model AppUser {
  id          String    @id @default(cuid())
  authMethod  String    @map("auth_method")
  userKey     String?   @map("user_key")
  meta        Json?
  appId       String    @map("app_id")
  appRecipeId String    @map("app_recipe_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  app         App       @relation(references: [id], fields: [appId])
  appRecipe   AppRecipe @relation(fields: [appRecipeId], references: [id])

  @@index([appId])
  @@index([appRecipeId])
  @@map("app_users")
}
